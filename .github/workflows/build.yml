name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201
    - name: Restore
      run: dotnet restore src/Logfella/Logfella.csproj
    - name: Build
      run: dotnet build --configuration Release --no-restore src/Logfella/Logfella.csproj
    - name: Pack
      run: dotnet pack --configuration Release --no-restore --verbosity normal src/Logfella/Logfella.csproj
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./src/Logfella/bin/Release/*.nupkg

  prerelease:
    needs: build
    runs-on: ubuntu-latest
    env:
      GITHUB_SOURCE: https://nuget.pkg.github.com/dustinmoris/index.json
      GITHUB_USER: dustinmoris
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg
      - name: Push Pre-Release NuGet
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_SOURCE
          done
        shell: bash
#      - name: Setup .NET Core
#        uses: actions/setup-dotnet@v1
#        with:
#          source-url: https://nuget.pkg.github.com/dustinmoris/index.json
#      - name: Push Pre-Release NuGet
#        run: dotnet nuget push nupkg/*.nupkg --skip-duplicate --no-symbols true

  deploy:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    env:
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg
      - name: Push NuGet
        run: dotnet nuget push nupkg/*.nupkg --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key $NUGET_KEY